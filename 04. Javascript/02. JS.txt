#########  CONTENT  #########

1. Introduction
2. hello World
3. Variable
4. console  - provides access to the browser's debugging console.
    -- log
    -- table
    -- info
    -- error
5. var vs let vs const keyword (for declaring variable)
	- Rules 
		* must start with $ or _ or letters
	- Scope (Global vs local Scope)
	- Redeclaring variables
	- let & const cannot be used untill they have been declared

6. JS Hoisting
	- JavaScript's default behavior of moving declarations to the top.
	- a variable can be used before it has been declared.

7. Operators 
	- Arithmatic operators 
	- Assignment Operators (=, +=, %=, **=)
	- adding numbers and strings
	- Comparison Operator (==, ===, !=, !==, <, > etc)
	- logical operators (&&, ||, ! etc)
	- == vs ===

8. if-else and nested if-else

9. functions in JS

10. ES6 Arrow function

11. for loop and while loop

12. Arrays (Contiguous collection of data)
	- array length
	- CRUD operation of array 
		* push(val) 	   : add to end
		* unshift(value)   : add to beginning
		* pop()  		   : remove from end
		* shift()  		   : remove from beginning

	- splice operation (create, delete and update elements in array)
		* syntax:- splice(start, deleteCount, value)
	- indexOf()


14. JS Objects
	- object declaration and fetching values of key

15. JSON (Javascript Object Notation)
	- a format for storing data when sending data from server to client
	- convert JSON to JS object and vice versa


16. DOM (Document Object Model) Manupulation
	- In web page, Browser creates DOM of HTML page
	- Finding elements
			* getElementById(ID)
			* getElementByClassName(name)
			* getElementByTag(name)
			* querySelector(selectors)
			* querySelectorAll(selectors)
	- Changing elements
			* element.innerHTML
			* element.innerText
			* element.attribute
			* element.style.cssProperty
			* element.setAttribute(attribute, val)
	- Add and delete html elements
			* document.createElement(element)
			* document.removeChild(element)
			* document.appendChild(element)
			* document.write(text)

	- Events in JS
			* when event occurs JS execute
			* EX: 
				1. onCLick
				2. onload
				3. onChange in input
				4. onmouseover and onmouseout (onHover and out of element)
				5. onmouseup and onmousedown 
					- clicked -> onmouseup event triggered  
					- released -> onmousedpwn event triggered  
					
	- Event Listener
			* addEventListener(event, function)
			* removeEventListener(event, function)

17. map, filter in array
	- map -> loop through each elements in array
	- filter -> returned filtered elements from array


Calculator App
	if else
	function
	Boolean rule
	simple mathematical operation

After That ...

Projects = () => {
	
}